import 'package:cron/cron.dart';
import 'package:mybot/core/services/env_service.dart';
import 'package:mybot/core/services/google_sheets_service.dart';
import 'package:televerse/televerse.dart';

void scheduleDailyReport(Bot bot, GoogleSheetsService sheetsService) {
  final cron = Cron();

  cron.schedule(Schedule.parse('00 20 * * *'), () async {
    print("üì§ –ù–∞—á–∏–Ω–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É –æ—Ç—á—ë—Ç–æ–≤...");

    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ ID –∏–∑ .env
    // final adminIdsRaw = EnvService.get('ADMINS');
    final superAdminIdsRaw = EnvService.get('SUPER_ADMINS');

    // final adminIds = _parseIds(adminIdsRaw);
    final superAdminIds = _parseIds(superAdminIdsRaw);

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –∏ —É–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    final allIds = {...superAdminIds}.toList(); //...adminIds

    for (final id in allIds) {
      try {
        await bot.api.sendMessage(
          ChatID(id),
          'üåá *–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä!*\n\nüìà –í–æ—Ç —Ç–≤–æ–π –æ—Ç—á—ë—Ç –∑–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ —Å–¥–µ–ª–∫–∞–º...\n\n‚ö†Ô∏è –ù–æ –ø–æ–¥–æ–∂–¥–∏... *Bytrix* –≤–µ–¥—å –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω üòÖ\n\nüîß –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—Å—Ç—Ä–æ–π Webhook –∏ –Ω–µ –∑–∞–±—É–¥—å –ø–µ—Ä–µ–¥–∞—Ç—å –µ–≥–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É!',
          parseMode: ParseMode.markdown,
        );

        await sheetsService.logSilently(
          userName: 'Bot',
          role: 'Super Admin',
          action: '/report',
        );
      } catch (e) {
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é $id: $e");
      }
    }

    print("‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");
  });
}

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤–∏–¥–∞ "12345,67890" –≤ List<int>
List<int> _parseIds(String? raw) {
  if (raw == null || raw.trim().isEmpty) return [];
  return raw
      .split(',')
      .map((e) => int.tryParse(e.trim()))
      .whereType<int>()
      .toList();
}
